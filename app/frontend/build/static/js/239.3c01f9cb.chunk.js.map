{"version":3,"file":"static/js/239.3c01f9cb.chunk.js","mappings":"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","sources":["components/GlassContainer.js","api.js","components/ProgressBar.js","pages/AIEngine.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst GlassContainer = styled.div`\r\n  background: ${props => props.theme.glass.background};\r\n  backdrop-filter: ${props => props.theme.glass.backdropFilter};\r\n  -webkit-backdrop-filter: ${props => props.theme.glass.backdropFilter};\r\n  border-radius: ${props => props.theme.glass.borderRadius};\r\n  border: ${props => props.theme.glass.border};\r\n  box-shadow: ${props => props.theme.glass.boxShadow};\r\n  padding: ${props => props.theme.spacing.lg};\r\n  transition: all ${props => props.theme.transitions.medium};\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: ${props => props.theme.boxShadow.large};\r\n  }\r\n`;\r\n\r\nexport default GlassContainer;\r\n","const API_URL = 'http://localhost:5000/api';\r\n\r\nexport const submitImage = async (formData) => {\r\n  const response = await fetch(`${API_URL}/submit`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Image submission failed');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getMarketData = async () => {\r\n  const response = await fetch(`${API_URL}/market`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch market data');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const sendChatMessage = async (message, diseaseContext = '') => {\r\n  const response = await fetch(`${API_URL}/chat`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ message, disease_context: diseaseContext }),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Chat message failed to send');\r\n  }\r\n  const data = await response.json();\r\n  return data.response;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  width: 100%;\r\n  height: 10px;\r\n  background-color: ${props => props.theme.colors.background};\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  margin: 1rem 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressFill = styled(motion.div)`\r\n  height: 100%;\r\n  background-color: ${props => props.theme.colors.secondary};\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n`;\r\n\r\nconst ProgressBar = ({ progress }) => {\r\n  return (\r\n    <ProgressBarContainer>\r\n      <ProgressFill\r\n        initial={{ width: 0 }}\r\n        animate={{ width: `${progress}%` }}\r\n        transition={{ duration: 0.5 }}\r\n      />\r\n    </ProgressBarContainer>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { Upload, ArrowRight, AlertTriangle, Check, Info, ShoppingBag, Camera } from 'lucide-react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { submitImage } from '../api';\r\nimport GlassContainer from '../components/GlassContainer';\r\nimport Chatbot from '../components/Chatbot';\r\nimport ProgressBar from '../components/ProgressBar';\r\n\r\nconst AIEngineContainer = styled(motion.div)`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 4rem 2rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${props => props.theme.colors.text};\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst DropzoneContainer = styled(GlassContainer)`\r\n  padding: 3rem;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: ${props => props.theme.boxShadow.large};\r\n  }\r\n`;\r\n\r\nconst DropzoneIcon = styled(Upload)`\r\n  width: 64px;\r\n  height: 64px;\r\n  color: ${props => props.theme.colors.primary};\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst DropzoneText = styled.p`\r\n  font-size: 1.2rem;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  max-width: 100%;\r\n  max-height: 400px;\r\n  margin-top: 2rem;\r\n  border-radius: 10px;\r\n  box-shadow: ${props => props.theme.boxShadow.medium};\r\n`;\r\n\r\nconst SubmitButton = styled(motion.button)`\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  padding: 1rem 2rem;\r\n  border: none;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  font-size: 1.2rem;\r\n  margin: 2rem auto;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.secondary};\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst ResultContainer = styled(motion.div)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst ResultItem = styled(GlassContainer)`\r\n  margin-bottom: 1.5rem;\r\n  padding: ${props => props.theme.spacing.lg};\r\n\r\n  h3 {\r\n    color: ${props => props.theme.colors.primary};\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1.4rem;\r\n\r\n    svg {\r\n      margin-right: 1rem;\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: 1.1rem;\r\n    line-height: 1.6;\r\n  }\r\n`;\r\n\r\nconst BuyButton = styled.a`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.colors.secondary};\r\n  color: white;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 50px;\r\n  text-decoration: none;\r\n  transition: all 0.3s ease;\r\n  margin-top: ${props => props.theme.spacing.md};\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.primary};\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  svg {\r\n    margin-right: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst AIEngine = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [diseaseContext, setDiseaseContext] = useState('');\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setSelectedFile(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleSubmit = async () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('image', selectedFile);\r\n      \r\n      try {\r\n        const response = await submitImage(formData, (progress) => {\r\n          setUploadProgress(progress);\r\n        });\r\n        setResult(response);\r\n        setDiseaseContext(response.title);\r\n      } catch (error) {\r\n        console.error('Error submitting image:', error);\r\n      } finally {\r\n        setUploadProgress(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AIEngineContainer\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Title>AI Plant Disease Detection</Title>\r\n      <DropzoneContainer {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <>\r\n            <DropzoneIcon />\r\n            <DropzoneText>Drop the image here ...</DropzoneText>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <DropzoneIcon />\r\n            <DropzoneText>Drag 'n' drop an image here, or click to select a file</DropzoneText>\r\n          </>\r\n        )}\r\n        {selectedFile && (\r\n          <ImagePreview src={URL.createObjectURL(selectedFile)} alt=\"Selected plant\" />\r\n        )}\r\n      </DropzoneContainer>\r\n      <SubmitButton\r\n        onClick={handleSubmit}\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n      >\r\n        Analyze\r\n        <ArrowRight size={24} style={{ marginLeft: '1rem' }} />\r\n      </SubmitButton>\r\n      {uploadProgress > 0 && <ProgressBar progress={uploadProgress} />}\r\n      {result && (\r\n        <ResultContainer\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <ResultItem>\r\n            <h3><Info size={24} /> Detected Disease</h3>\r\n            <p>{result.title}</p>\r\n          </ResultItem>\r\n          <ResultItem>\r\n            <h3><AlertTriangle size={24} /> Description</h3>\r\n            <p>{result.description}</p>\r\n          </ResultItem>\r\n          <ResultItem>\r\n            <h3><Check size={24} /> Prevention Steps</h3>\r\n            <p>{result.prevent}</p>\r\n          </ResultItem>\r\n          <ResultItem>\r\n            <h3><ShoppingBag size={24} /> Recommended Supplement</h3>\r\n            <p>{result.supplement_name}</p>\r\n            <BuyButton href={result.supplement_buy_link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <ShoppingBag size={20} />\r\n              Buy Now\r\n            </BuyButton>\r\n          </ResultItem>\r\n        </ResultContainer>\r\n      )}\r\n      <Chatbot\r\n        diseaseContext={diseaseContext}\r\n        initialMessage={result ? `The detected disease is ${result.title}. ${result.description}` : ''}\r\n      />\r\n    </AIEngineContainer>\r\n  );\r\n};\r\n\r\nexport default AIEngine;\r\n"],"names":["styled","div","props","theme","glass","background","backdropFilter","borderRadius","border","boxShadow","spacing","lg","transitions","medium","large","API_URL","ProgressBarContainer","colors","small","ProgressFill","motion","secondary","_ref","progress","_jsx","children","initial","width","animate","transition","duration","AIEngineContainer","Title","h1","text","DropzoneContainer","GlassContainer","DropzoneIcon","Upload","primary","DropzoneText","p","textSecondary","ImagePreview","img","SubmitButton","button","ResultContainer","ResultItem","BuyButton","a","md","AIEngine","selectedFile","setSelectedFile","useState","result","setResult","diseaseContext","setDiseaseContext","uploadProgress","setUploadProgress","onDrop","useCallback","acceptedFiles","getRootProps","getInputProps","isDragActive","useDropzone","_jsxs","opacity","exit","_Fragment","src","URL","createObjectURL","alt","onClick","async","formData","FormData","append","response","fetch","method","body","ok","Error","json","submitImage","title","error","console","whileHover","scale","whileTap","ArrowRight","size","style","marginLeft","ProgressBar","y","Info","AlertTriangle","description","Check","prevent","ShoppingBag","supplement_name","href","supplement_buy_link","target","rel","Chatbot","initialMessage"],"sourceRoot":""}