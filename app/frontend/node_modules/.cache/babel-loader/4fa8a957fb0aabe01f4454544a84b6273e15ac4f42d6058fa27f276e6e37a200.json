{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import{motion,AnimatePresence}from'framer-motion';import{MessageSquare,Send,X}from'lucide-react';import{sendChatMessage}from'../api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatbotContainer=styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  background-color: ${props=>props.theme.colors.glass};\n  border-radius: ${props=>props.theme.borderRadius.large};\n  box-shadow: ${props=>props.theme.boxShadow.large};\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  z-index: 9999;\n  display: flex;\n  flex-direction: column;\n`;const ChatHeader=styled.div`\n  background-color: ${props=>props.theme.colors.primary};\n  color: white;\n  padding: ${props=>props.theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n`;const ChatMessages=styled.div`\n  height: 350px;\n  overflow-y: auto;\n  padding: ${props=>props.theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n`;const MessageBubble=styled.div`\n  max-width: 80%;\n  padding: ${props=>props.theme.spacing.sm} ${props=>props.theme.spacing.md};\n  border-radius: ${props=>props.theme.borderRadius.medium};\n  margin-bottom: ${props=>props.theme.spacing.sm};\n  align-self: ${props=>props.sender==='You'?'flex-end':'flex-start'};\n  background-color: ${props=>props.sender==='You'?props.theme.colors.secondary:props.theme.colors.tertiary};\n  color: ${props=>props.theme.colors.text};\n`;const ChatInputContainer=styled.div`\n  display: flex;\n  padding: ${props=>props.theme.spacing.sm};\n  background-color: rgba(255, 255, 255, 0.1);\n`;const ChatInput=styled.input`\n  flex-grow: 1;\n  padding: ${props=>props.theme.spacing.sm};\n  border: none;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  background-color: rgba(255, 255, 255, 0.2);\n  color: ${props=>props.theme.colors.text};\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${props=>props.theme.colors.secondary};\n  }\n`;const SendButton=styled.button`\n  background-color: ${props=>props.theme.colors.secondary};\n  color: white;\n  border: none;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  padding: ${props=>props.theme.spacing.sm};\n  margin-left: ${props=>props.theme.spacing.sm};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${props=>props.theme.colors.tertiary};\n  }\n`;const ChatToggle=styled(motion.button)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: ${props=>props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  font-size: 24px;\n  cursor: pointer;\n  box-shadow: ${props=>props.theme.boxShadow.medium};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;const TypingIndicator=styled.div`\n  display: flex;\n  padding: 10px;\n  background-color: ${props=>props.theme.colors.tertiary};\n  border-radius: 20px;\n  margin-bottom: 10px;\n  align-self: flex-start;\n\n  span {\n    height: 8px;\n    width: 8px;\n    float: left;\n    margin: 0 1px;\n    background-color: ${props=>props.theme.colors.text};\n    display: block;\n    border-radius: 50%;\n    opacity: 0.4;\n    animation: 1s blink infinite;\n  }\n\n  span:nth-of-type(2) {\n    animation-delay: 0.2s;\n  }\n\n  span:nth-of-type(3) {\n    animation-delay: 0.4s;\n  }\n\n  @keyframes blink {\n    50% {\n      opacity: 1;\n    }\n  }\n`;const Chatbot=_ref=>{let{diseaseContext=''}=_ref;const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isTyping,setIsTyping]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);useEffect(()=>{if(isOpen){initializeChatbot(diseaseContext);}},[isOpen,diseaseContext]);const addMessage=(sender,message)=>{setMessages(prevMessages=>[...prevMessages,{sender,message}]);};const handleSend=async()=>{if(input.trim()){addMessage('You',input);setInput('');setIsTyping(true);try{const response=await sendChatMessage(input,diseaseContext);setIsTyping(false);addMessage('AI',response);}catch(error){console.error('Error:',error);setIsTyping(false);addMessage('AI','Sorry, there was an error processing your request.');}}};const initializeChatbot=async context=>{setIsTyping(true);try{const response=await sendChatMessage(`Tell me about ${context||'plant health'} in general.`,context);setIsTyping(false);addMessage('AI',response);}catch(error){console.error('Error:',error);setIsTyping(false);addMessage('AI','Sorry, there was an error initializing the chatbot.');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AnimatePresence,{children:isOpen&&/*#__PURE__*/_jsxs(ChatbotContainer,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:20},transition:{type:'spring',stiffness:500,damping:30},children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Plant Health Assistant\"}),/*#__PURE__*/_jsx(X,{onClick:()=>setIsOpen(false),style:{cursor:'pointer'}})]}),/*#__PURE__*/_jsxs(ChatMessages,{children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(MessageBubble,{sender:msg.sender,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.sender,\":\"]}),\" \",msg.message]},index)),isTyping&&/*#__PURE__*/_jsxs(TypingIndicator,{children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(ChatInputContainer,{children:[/*#__PURE__*/_jsx(ChatInput,{value:input,onChange:e=>setInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSend(),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(SendButton,{onClick:handleSend,children:/*#__PURE__*/_jsx(Send,{size:20})})]})]})}),/*#__PURE__*/_jsx(ChatToggle,{onClick:()=>setIsOpen(!isOpen),whileHover:{scale:1.1},whileTap:{scale:0.9},children:/*#__PURE__*/_jsx(MessageSquare,{})})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","AnimatePresence","MessageSquare","Send","X","sendChatMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatbotContainer","div","props","theme","colors","glass","borderRadius","large","boxShadow","ChatHeader","primary","spacing","md","ChatMessages","MessageBubble","sm","medium","sender","secondary","tertiary","text","ChatInputContainer","ChatInput","input","small","SendButton","button","ChatToggle","TypingIndicator","Chatbot","_ref","diseaseContext","isOpen","setIsOpen","messages","setMessages","setInput","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","initializeChatbot","addMessage","message","prevMessages","handleSend","trim","response","error","console","context","children","initial","opacity","y","animate","exit","transition","type","stiffness","damping","onClick","style","cursor","map","msg","index","ref","value","onChange","e","target","onKeyPress","key","placeholder","size","whileHover","scale","whileTap"],"sources":["C:/Users/santosh/Desktop/All Projects/Plant-Disease-Detection/app/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { MessageSquare, Send, X } from 'lucide-react';\r\nimport { sendChatMessage } from '../api';\r\n\r\nconst ChatbotContainer = styled(motion.div)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  width: 350px;\r\n  background-color: ${props => props.theme.colors.glass};\r\n  border-radius: ${props => props.theme.borderRadius.large};\r\n  box-shadow: ${props => props.theme.boxShadow.large};\r\n  overflow: hidden;\r\n  backdrop-filter: blur(10px);\r\n  z-index: 9999;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  padding: ${props => props.theme.spacing.md};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.spacing.md};\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MessageBubble = styled.div`\r\n  max-width: 80%;\r\n  padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\r\n  border-radius: ${props => props.theme.borderRadius.medium};\r\n  margin-bottom: ${props => props.theme.spacing.sm};\r\n  align-self: ${props => props.sender === 'You' ? 'flex-end' : 'flex-start'};\r\n  background-color: ${props => props.sender === 'You' ? props.theme.colors.secondary : props.theme.colors.tertiary};\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  display: flex;\r\n  padding: ${props => props.theme.spacing.sm};\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: ${props => props.theme.spacing.sm};\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  color: ${props => props.theme.colors.text};\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${props => props.theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background-color: ${props => props.theme.colors.secondary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  padding: ${props => props.theme.spacing.sm};\r\n  margin-left: ${props => props.theme.spacing.sm};\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.tertiary};\r\n  }\r\n`;\r\n\r\nconst ChatToggle = styled(motion.button)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  box-shadow: ${props => props.theme.boxShadow.medium};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst TypingIndicator = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  background-color: ${props => props.theme.colors.tertiary};\r\n  border-radius: 20px;\r\n  margin-bottom: 10px;\r\n  align-self: flex-start;\r\n\r\n  span {\r\n    height: 8px;\r\n    width: 8px;\r\n    float: left;\r\n    margin: 0 1px;\r\n    background-color: ${props => props.theme.colors.text};\r\n    display: block;\r\n    border-radius: 50%;\r\n    opacity: 0.4;\r\n    animation: 1s blink infinite;\r\n  }\r\n\r\n  span:nth-of-type(2) {\r\n    animation-delay: 0.2s;\r\n  }\r\n\r\n  span:nth-of-type(3) {\r\n    animation-delay: 0.4s;\r\n  }\r\n\r\n  @keyframes blink {\r\n    50% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Chatbot = ({ diseaseContext = '' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      initializeChatbot(diseaseContext);\r\n    }\r\n  }, [isOpen, diseaseContext]);\r\n\r\n  const addMessage = (sender, message) => {\r\n    setMessages(prevMessages => [...prevMessages, { sender, message }]);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      addMessage('You', input);\r\n      setInput('');\r\n      setIsTyping(true);\r\n      try {\r\n        const response = await sendChatMessage(input, diseaseContext);\r\n        setIsTyping(false);\r\n        addMessage('AI', response);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setIsTyping(false);\r\n        addMessage('AI', 'Sorry, there was an error processing your request.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeChatbot = async (context) => {\r\n    setIsTyping(true);\r\n    try {\r\n      const response = await sendChatMessage(`Tell me about ${context || 'plant health'} in general.`, context);\r\n      setIsTyping(false);\r\n      addMessage('AI', response);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setIsTyping(false);\r\n      addMessage('AI', 'Sorry, there was an error initializing the chatbot.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <ChatbotContainer\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 20 }}\r\n            transition={{ type: 'spring', stiffness: 500, damping: 30 }}\r\n          >\r\n            <ChatHeader>\r\n              <span>Plant Health Assistant</span>\r\n              <X onClick={() => setIsOpen(false)} style={{ cursor: 'pointer' }} />\r\n            </ChatHeader>\r\n            <ChatMessages>\r\n              {messages.map((msg, index) => (\r\n                <MessageBubble key={index} sender={msg.sender}>\r\n                  <strong>{msg.sender}:</strong> {msg.message}\r\n                </MessageBubble>\r\n              ))}\r\n              {isTyping && (\r\n                <TypingIndicator>\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </TypingIndicator>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </ChatMessages>\r\n            <ChatInputContainer>\r\n              <ChatInput\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n              <SendButton onClick={handleSend}>\r\n                <Send size={20} />\r\n              </SendButton>\r\n            </ChatInputContainer>\r\n          </ChatbotContainer>\r\n        )}\r\n      </AnimatePresence>\r\n      <ChatToggle\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n      >\r\n        <MessageSquare />\r\n      </ChatToggle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}