{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import{motion,AnimatePresence}from'framer-motion';import{MessageSquare,Send,X,Loader,Mic,Save}from'lucide-react';import{sendChatMessage}from'../api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatbotContainer=styled(motion.div)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  background-color: ${props=>props.theme.colors.glass};\n  border-radius: ${props=>props.theme.borderRadius.large};\n  box-shadow: ${props=>props.theme.boxShadow.large};\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n  z-index: 9999;\n  display: flex;\n  flex-direction: column;\n`;const ChatHeader=styled.div`\n  background-color: ${props=>props.theme.colors.primary};\n  color: white;\n  padding: ${props=>props.theme.spacing.md};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n`;const ChatMessages=styled.div`\n  height: 350px;\n  overflow-y: auto;\n  padding: ${props=>props.theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n  background-color: rgba(255, 255, 255, 0.1);\n`;const MessageBubble=styled.div`\n  max-width: 80%;\n  padding: ${props=>props.theme.spacing.sm} ${props=>props.theme.spacing.md};\n  border-radius: ${props=>props.theme.borderRadius.medium};\n  margin-bottom: ${props=>props.theme.spacing.sm};\n  align-self: ${props=>props.sender==='You'?'flex-end':'flex-start'};\n  background-color: ${props=>props.sender==='You'?props.theme.colors.secondary:props.theme.colors.tertiary};\n  color: ${props=>props.theme.colors.text};\n  box-shadow: ${props=>props.theme.boxShadow.small};\n`;const ChatInputContainer=styled.div`\n  display: flex;\n  padding: ${props=>props.theme.spacing.sm};\n  background-color: rgba(255, 255, 255, 0.2);\n`;const ChatInput=styled.input`\n  flex-grow: 1;\n  padding: ${props=>props.theme.spacing.sm};\n  border: none;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  background-color: rgba(255, 255, 255, 0.3);\n  color: ${props=>props.theme.colors.text};\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${props=>props.theme.colors.secondary};\n  }\n`;const ChatButton=styled.button`\n  background-color: ${props=>props.theme.colors.secondary};\n  color: white;\n  border: none;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  padding: ${props=>props.theme.spacing.sm};\n  margin-left: ${props=>props.theme.spacing.sm};\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${props=>props.theme.colors.tertiary};\n  }\n`;const ChatToggle=styled(motion.button)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: ${props=>props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  font-size: 24px;\n  cursor: pointer;\n  box-shadow: ${props=>props.theme.boxShadow.medium};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;const TypingIndicator=styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${props=>props.theme.spacing.sm};\n  color: ${props=>props.theme.colors.textSecondary};\n`;const SuggestedQuestions=styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-top: 1rem;\n`;const SuggestedQuestion=styled.button`\n  background-color: ${props=>props.theme.colors.secondary};\n  color: white;\n  border: none;\n  border-radius: ${props=>props.theme.borderRadius.small};\n  padding: ${props=>props.theme.spacing.xs} ${props=>props.theme.spacing.sm};\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${props=>props.theme.colors.tertiary};\n  }\n`;const Chatbot=_ref=>{let{diseaseContext=''}=_ref;const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isTyping,setIsTyping]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);useEffect(()=>{if(isOpen&&diseaseContext){initializeChatbot(diseaseContext);}},[isOpen,diseaseContext]);const addMessage=function(sender,message){let isStreaming=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;setMessages(prevMessages=>{const lastMessage=prevMessages[prevMessages.length-1];if(isStreaming&&lastMessage&&lastMessage.sender===sender){return[...prevMessages.slice(0,-1),{...lastMessage,message}];}return[...prevMessages,{sender,message}];});};const handleSend=async()=>{if(input.trim()){addMessage('You',input);setInput('');setIsTyping(true);try{const response=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:input,disease_context:diseaseContext})});const reader=response.body.getReader();const decoder=new TextDecoder();let aiResponse='';while(true){const{done,value}=await reader.read();if(done)break;const chunk=decoder.decode(value);aiResponse+=chunk;addMessage('AI',aiResponse,true);}}catch(error){console.error('Error:',error);addMessage('AI','Sorry, there was an error processing your request.');}finally{setIsTyping(false);}}};const initializeChatbot=async context=>{setIsTyping(true);try{const initialMessage=`Tell me about ${context} disease in plants.`;addMessage('You',initialMessage);const response=await sendChatMessage(initialMessage,context);addMessage('AI',response);}catch(error){console.error('Error:',error);addMessage('AI','Sorry, there was an error initializing the chatbot.');}finally{setIsTyping(false);}};const handleVoiceInput=()=>{// Implement voice input functionality\n};const handleSaveChat=()=>{// Implement chat saving functionality\n};const suggestedQuestions=[\"What are the early symptoms?\",\"How does it spread?\",\"Can it be cured?\",\"What's the best treatment?\"];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AnimatePresence,{children:isOpen&&/*#__PURE__*/_jsxs(ChatbotContainer,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:20},transition:{type:'spring',stiffness:500,damping:30},children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Plant Health Assistant\"}),/*#__PURE__*/_jsx(X,{onClick:()=>setIsOpen(false),style:{cursor:'pointer'}})]}),/*#__PURE__*/_jsxs(ChatMessages,{children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(MessageBubble,{sender:msg.sender,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.sender,\":\"]}),\" \",msg.message]},index)),isTyping&&/*#__PURE__*/_jsxs(TypingIndicator,{children:[/*#__PURE__*/_jsx(Loader,{size:16,style:{marginRight:'8px'}}),\"AI is typing...\"]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(SuggestedQuestions,{children:suggestedQuestions.map((question,index)=>/*#__PURE__*/_jsx(SuggestedQuestion,{onClick:()=>setInput(question),children:question},index))}),/*#__PURE__*/_jsxs(ChatInputContainer,{children:[/*#__PURE__*/_jsx(ChatInput,{value:input,onChange:e=>setInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSend(),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(ChatButton,{onClick:handleVoiceInput,children:/*#__PURE__*/_jsx(Mic,{size:20})}),/*#__PURE__*/_jsx(ChatButton,{onClick:handleSend,children:/*#__PURE__*/_jsx(Send,{size:20})}),/*#__PURE__*/_jsx(ChatButton,{onClick:handleSaveChat,children:/*#__PURE__*/_jsx(Save,{size:20})})]})]})}),/*#__PURE__*/_jsx(ChatToggle,{onClick:()=>setIsOpen(!isOpen),whileHover:{scale:1.1},whileTap:{scale:0.9},children:/*#__PURE__*/_jsx(MessageSquare,{})})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","AnimatePresence","MessageSquare","Send","X","Loader","Mic","Save","sendChatMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatbotContainer","div","props","theme","colors","glass","borderRadius","large","boxShadow","ChatHeader","primary","spacing","md","ChatMessages","MessageBubble","sm","medium","sender","secondary","tertiary","text","small","ChatInputContainer","ChatInput","input","ChatButton","button","ChatToggle","TypingIndicator","textSecondary","SuggestedQuestions","SuggestedQuestion","xs","Chatbot","_ref","diseaseContext","isOpen","setIsOpen","messages","setMessages","setInput","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","initializeChatbot","addMessage","message","isStreaming","arguments","length","undefined","prevMessages","lastMessage","slice","handleSend","trim","response","fetch","method","headers","body","JSON","stringify","disease_context","reader","getReader","decoder","TextDecoder","aiResponse","done","value","read","chunk","decode","error","console","context","initialMessage","handleVoiceInput","handleSaveChat","suggestedQuestions","children","initial","opacity","y","animate","exit","transition","type","stiffness","damping","onClick","style","cursor","map","msg","index","size","marginRight","ref","question","onChange","e","target","onKeyPress","key","placeholder","whileHover","scale","whileTap"],"sources":["C:/Users/santosh/Desktop/All Projects/Plant-Disease-Detection/app/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { MessageSquare, Send, X, Loader, Mic, Save } from 'lucide-react';\r\nimport { sendChatMessage } from '../api';\r\n\r\nconst ChatbotContainer = styled(motion.div)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  width: 350px;\r\n  background-color: ${props => props.theme.colors.glass};\r\n  border-radius: ${props => props.theme.borderRadius.large};\r\n  box-shadow: ${props => props.theme.boxShadow.large};\r\n  overflow: hidden;\r\n  backdrop-filter: blur(10px);\r\n  z-index: 9999;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  padding: ${props => props.theme.spacing.md};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.spacing.md};\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst MessageBubble = styled.div`\r\n  max-width: 80%;\r\n  padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\r\n  border-radius: ${props => props.theme.borderRadius.medium};\r\n  margin-bottom: ${props => props.theme.spacing.sm};\r\n  align-self: ${props => props.sender === 'You' ? 'flex-end' : 'flex-start'};\r\n  background-color: ${props => props.sender === 'You' ? props.theme.colors.secondary : props.theme.colors.tertiary};\r\n  color: ${props => props.theme.colors.text};\r\n  box-shadow: ${props => props.theme.boxShadow.small};\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  display: flex;\r\n  padding: ${props => props.theme.spacing.sm};\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: ${props => props.theme.spacing.sm};\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  color: ${props => props.theme.colors.text};\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px ${props => props.theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  background-color: ${props => props.theme.colors.secondary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  padding: ${props => props.theme.spacing.sm};\r\n  margin-left: ${props => props.theme.spacing.sm};\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.tertiary};\r\n  }\r\n`;\r\n\r\nconst ChatToggle = styled(motion.button)`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  box-shadow: ${props => props.theme.boxShadow.medium};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst TypingIndicator = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${props => props.theme.spacing.sm};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst SuggestedQuestions = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst SuggestedQuestion = styled.button`\r\n  background-color: ${props => props.theme.colors.secondary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.small};\r\n  padding: ${props => props.theme.spacing.xs} ${props => props.theme.spacing.sm};\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.tertiary};\r\n  }\r\n`;\r\n\r\nconst Chatbot = ({ diseaseContext = '' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && diseaseContext) {\r\n      initializeChatbot(diseaseContext);\r\n    }\r\n  }, [isOpen, diseaseContext]);\r\n\r\n  const addMessage = (sender, message, isStreaming = false) => {\r\n    setMessages(prevMessages => {\r\n      const lastMessage = prevMessages[prevMessages.length - 1];\r\n      if (isStreaming && lastMessage && lastMessage.sender === sender) {\r\n        return [...prevMessages.slice(0, -1), { ...lastMessage, message }];\r\n      }\r\n      return [...prevMessages, { sender, message }];\r\n    });\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      addMessage('You', input);\r\n      setInput('');\r\n      setIsTyping(true);\r\n      try {\r\n        const response = await fetch('/api/chat', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ message: input, disease_context: diseaseContext }),\r\n        });\r\n\r\n        const reader = response.body.getReader();\r\n        const decoder = new TextDecoder();\r\n        let aiResponse = '';\r\n\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n          const chunk = decoder.decode(value);\r\n          aiResponse += chunk;\r\n          addMessage('AI', aiResponse, true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        addMessage('AI', 'Sorry, there was an error processing your request.');\r\n      } finally {\r\n        setIsTyping(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeChatbot = async (context) => {\r\n    setIsTyping(true);\r\n    try {\r\n      const initialMessage = `Tell me about ${context} disease in plants.`;\r\n      addMessage('You', initialMessage);\r\n      const response = await sendChatMessage(initialMessage, context);\r\n      addMessage('AI', response);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      addMessage('AI', 'Sorry, there was an error initializing the chatbot.');\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    // Implement voice input functionality\r\n  };\r\n\r\n  const handleSaveChat = () => {\r\n    // Implement chat saving functionality\r\n  };\r\n\r\n  const suggestedQuestions = [\r\n    \"What are the early symptoms?\",\r\n    \"How does it spread?\",\r\n    \"Can it be cured?\",\r\n    \"What's the best treatment?\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <ChatbotContainer\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 20 }}\r\n            transition={{ type: 'spring', stiffness: 500, damping: 30 }}\r\n          >\r\n            <ChatHeader>\r\n              <span>Plant Health Assistant</span>\r\n              <X onClick={() => setIsOpen(false)} style={{ cursor: 'pointer' }} />\r\n            </ChatHeader>\r\n            <ChatMessages>\r\n              {messages.map((msg, index) => (\r\n                <MessageBubble key={index} sender={msg.sender}>\r\n                  <strong>{msg.sender}:</strong> {msg.message}\r\n                </MessageBubble>\r\n              ))}\r\n              {isTyping && (\r\n                <TypingIndicator>\r\n                  <Loader size={16} style={{ marginRight: '8px' }} />\r\n                  AI is typing...\r\n                </TypingIndicator>\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </ChatMessages>\r\n            <SuggestedQuestions>\r\n              {suggestedQuestions.map((question, index) => (\r\n                <SuggestedQuestion key={index} onClick={() => setInput(question)}>\r\n                  {question}\r\n                </SuggestedQuestion>\r\n              ))}\r\n            </SuggestedQuestions>\r\n            <ChatInputContainer>\r\n              <ChatInput\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n              <ChatButton onClick={handleVoiceInput}>\r\n                <Mic size={20} />\r\n              </ChatButton>\r\n              <ChatButton onClick={handleSend}>\r\n                <Send size={20} />\r\n              </ChatButton>\r\n              <ChatButton onClick={handleSaveChat}>\r\n                <Save size={20} />\r\n              </ChatButton>\r\n            </ChatInputContainer>\r\n          </ChatbotContainer>\r\n        )}\r\n      </AnimatePresence>\r\n      <ChatToggle\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n      >\r\n        <MessageSquare />\r\n      </ChatToggle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}